version: '3.8'

services:

    api:
        build: ./src
        container_name: spf_api
        restart: always
        expose:
            - 8000
        networks:
            - backend
        command: python -m uvicorn src.main:app --host 0.0.0.0 --reload
        env_file:
            - ./.env.dev
        volumes:
            - ./src/:/usr/src/spf/src
        ports:
            - "127.0.0.1:8000:8000"
        depends_on:
            - db
            - rabbitmq
            - redis

    db:
        image: postgres:16-alpine
        container_name: spf_db
        restart: always
        expose:
            - 5432
        networks:
            - backend
        env_file:
            - ./.env.dev
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - "127.0.0.1:5432:5432"

    redis:
        image: redis:7-alpine
        container_name: spf_redis
        restart: always
        expose:
            - 6379
        ports:
            - "127.0.0.1:6379:6379"
        networks:
            - backend

    rabbitmq:
        image: library/rabbitmq:3.13-management-alpine
        container_name: spf_rabbitmq
        restart: always
        expose:
            - 5672
            - 15672
        ports:
            - "127.0.0.1:5672:5672"
        networks:
            - backend

    celery_worker:
        build: ./src
        container_name: spf_celery_worker
        restart: always
        command: celery --app=src.celery_app worker -B --concurrency=5 -s /tmp/celerybeat-schedule --loglevel=DEBUG
        networks:
            - backend
        volumes:
            - ./src/:/usr/src/spf/src
        env_file:
            - ./.env.dev
        depends_on:
            - api
            - rabbitmq
            - redis


networks:
    backend:
        external: true
        name: cpf_backend
        driver: bridge

volumes:
  postgres_data:
